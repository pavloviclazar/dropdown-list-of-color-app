{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/dd/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dropdown(_ref) {\n  _s();\n\n  let {\n    options\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = event => {\n    // CLOSE DROPDOWN\n    setIsOpen(false); // WHAT OPTION DID THE USER CLICK ON ???\n\n    console.log(event);\n  };\n\n  const renderedOptions = options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleOptionClick(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      children: \"Select...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderedOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useState","Dropdown","options","isOpen","setIsOpen","handleClick","handleOptionClick","event","console","log","renderedOptions","map","option","label","value"],"sources":["/Users/mac/Documents/dd/src/components/Dropdown.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Dropdown({ options }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = (event) => {\n    // CLOSE DROPDOWN\n    setIsOpen(false);\n    // WHAT OPTION DID THE USER CLICK ON ???\n    console.log(event);\n  };\n\n  const renderedOptions = options.map((option) => {\n    return (\n      <div onClick={() => handleOptionClick(option)} key={option.value}>\n        {option.label}\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <div onClick={handleClick}>Select...</div>\n      {isOpen && <div>{renderedOptions}</div>}\n    </div>\n  );\n}\n\nexport default Dropdown;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,QAAT,OAA+B;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC7B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;;EAEA,MAAMK,WAAW,GAAG,MAAM;IACxBD,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;;EAIA,MAAMG,iBAAiB,GAAIC,KAAD,IAAW;IACnC;IACAH,SAAS,CAAC,KAAD,CAAT,CAFmC,CAGnC;;IACAI,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD,CALD;;EAOA,MAAMG,eAAe,GAAGR,OAAO,CAACS,GAAR,CAAaC,MAAD,IAAY;IAC9C,oBACE;MAAK,OAAO,EAAE,MAAMN,iBAAiB,CAACM,MAAD,CAArC;MAAA,UACGA,MAAM,CAACC;IADV,GAAoDD,MAAM,CAACE,KAA3D;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CANuB,CAAxB;EAQA,oBACE;IAAA,wBACE;MAAK,OAAO,EAAET,WAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGF,MAAM,iBAAI;MAAA,UAAMO;IAAN;MAAA;MAAA;MAAA;IAAA,QAFb;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA5BQT,Q;;KAAAA,Q;AA8BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}